#!/bin/bash -T

while IFS=' ' builtin read -r _ _ function; do
  builtin unset -f "$function"
done < <(builtin declare -Fx)





typeset -a bashly_code_lines=()
typeset -a bashly_functions=(
  __b7ab299a__command_dispatcher
  __b7ab299a__compile_script
  __b7ab299a__load_bashly
)
typeset -a bashly_extensions=(
  bashly
)
typeset -A bashlies=()





function __b7ab299a__command_dispatcher {
  typeset bash_command=$1 IFS trigger rest

  unset IFS

  read -r trigger rest <<< "$bash_command"

  [[ $trigger = :* ]] || {
    bashly_code_lines+=("$bash_command")
    return 1
  }

  case $trigger in
    :load)
      __b7ab299a__load_bashly "$rest";;
  esac

  return 1
}


function __b7ab299a__compile_script {
  typeset function

  for function in "${bashly_functions[@]}"; do
    unset -f "$function"
  done

  # Emit the function declarations
  declare -fp

  # Emit the source code
  printf '%s\n' "${bashly_code_lines[@]}"
}


function __b7ab299a__load_bashly {
  typeset bashly=$1 IFS=:
  typeset place extension fd module
  typeset -a places loaded_modules new_loaded_modules

  [[ $bashly ]] || return 1

  if [[ ${bashlies["$bashly"]} = loaded ]]; then
    printf '%s %s\n' "$(date +%s.%N)" "not loading $bashly, loaded already" >&2

    return 0
  fi

  read -ra places <<< "$BASHLY_PATH"

  for place in "${places[@]}"; do
    for extension in "${bashly_extensions}"; do
      [[ -r $place/$bashly.$extension ]] && {
        loaded_modules=("${!bashlies[@]}" "$bashly")

        BASHLY_MODULES="${loaded_modules[*]}" \
          "$BASH_SOURCE" "$place/$bashly.$extension"

        bashlies["$bashly"]=loaded

        return 0;
      }
    done
  done

  return 1
}





unset IFS

IFS=: read -ra bashly_loaded_modules <<< "$BASHLY_MODULES"
for bashly_loaded_module in "${bashly_loaded_modules[@]}"; do
  bashlies["$bashly_loaded_module"]=loaded
done

shopt -s extdebug;

trap '
  if ((BASH_LINENO)); then
    __b7ab299a__command_dispatcher "$BASH_COMMAND"
  elif [[ "$BASH_COMMAND" = __b7ab299a__compile_script ]]; then
    __b7ab299a__compile_script
    exit
  fi
  ' DEBUG

source "$1"

__b7ab299a__compile_script
